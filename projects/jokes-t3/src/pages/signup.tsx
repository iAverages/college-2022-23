import { type NextPage } from "next";
import Head from "next/head";
import * as z from "zod";
import Form from "../components/form";
import Input from "../components/input";
import useForm from "../hooks/useForm";
// import { useForm } from "react-hook-form";
import { trpc } from "../utils/trpc";

const schema = z
    .object({
        username: z.string(),
        email: z.string().email(),
        password: z.string().min(10),
        confirmPassword: z.string().min(10),
    })
    .superRefine(({ confirmPassword, password }, ctx) => {
        if (confirmPassword !== password) {
            ctx.addIssue({
                code: "custom",
                message: "The passwords did not match",
            });
        }
    });

type SignUpForm = z.infer<typeof schema>;

const Home: NextPage = () => {
    const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

    const {
        register,
        handleSubmit,
        formState: { errors },
        clearErrors
    } = useForm<SignUpForm>(schema);

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
                <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
                    <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">Sign up</h1>
                    <div className="flex">
                        <Form onSubmit={handleSubmit((d) => console.log(d))}>
                            <Input errors={errors} {...register("username")} />
                            <Input errors={errors} {...register("email")} />
                            <Input errors={errors} {...register("password")} />
                            <Input errors={errors} {...register("confirmPassword")} />
                            {/* <input {...register("username")} /> */}
                            {/* {errors.username?.message && <p>{errors.username.message}</p>} */}
                            {/* <input {...register("email")} />
                            {errors.email?.message && <p>{errors.email.message}</p>}
                            <input {...register("password")} />
                            {errors.password?.message && <p>{errors.password.message}</p>}
                            <input {...register("confirmPassword")} />
                            {errors.confirmPassword?.message && <p>{errors.confirmPassword.message}</p>} */}
                            <input type="submit" value="Submit" className="bg-purple-400 p-2" />
                        </Form>
                    </div>
                </div>
            </main>
        </>
    );
};

export default Home;
